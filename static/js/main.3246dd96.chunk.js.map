{"version":3,"sources":["components/helpers.js","components/Countdown.js","components/Period.js","components/svg/times.svg","components/SettingsModal.js","components/svg/fa-cog.svg","components/SettingsIcon.js","components/AppContent.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["convertToEST","time","Countdown","props","useState","timeLeft","setTimeLeft","useEffect","fromTheStartOfDay","Math","round","Date","now","timeSlot","isWeekend","undefined","primaryFocus","toLocaleTimeString","end","displayString","floor","trim","Period","display","setDisplay","link","setLink","richContext","loadedRC","localStorage","getItem","mRichContext","loadedFrom","from","loadedTo","to","loadedLink","console","log","event","onClick","window","open","SettingsModal","editors","setEditors","files","setFiles","verifyExistingLink","id","value","str","RegExp","test","alert","removeItem","times","out","Object","keys","forEach","key","key2","label","labelValue","linkValue","push","Fragment","className","type","defaultValue","onInput","e","target","setItem","onBlur","outFormated","dti","day","dayToString","toString","handleKeyPress","preventDefault","handleCloseSettings","document","addEventListener","removeEventListener","src","alt","localStorageExport","match","element","createElement","file","Blob","JSON","stringify","href","URL","createObjectURL","download","body","appendChild","click","handleExport","accept","onChange","reader","FileReader","onload","contents","result","impored","parse","location","reload","readAsText","handleImport","SettingsIcon","showSettings","setShowSettings","facog","changeAppVisibility","AppContent","setTime","displayAppContents","setDisplayAppContents","currentSlot","setCurrentSlot","timesTable","setTimesTable","setIsWeekend","fetch","then","response","json","data","timerID","setInterval","dayToday","getDay","dayMap","update","period","start","btoa","tick","clearInterval","toLocaleDateString","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","process","origin","headers","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration","waiting","postMessage"],"mappings":"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","file":"static/js/main.3246dd96.chunk.js","sourcesContent":["const convertToEST = (time) => {\n  if (time - 18000 < 0) {\n    return time - 18000 + 86400; // time - 5hours (make it EST) and add a day (the date cannot be negative)\n  }\n  return time - 18000;\n};\n\nfunction validURL(str) {\n  var pattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\n    \"i\"\n  ); // fragment locator\n  return !!pattern.test(str);\n}\n\nexport { convertToEST, validURL };\n","import React, { useState, useEffect } from \"react\";\nimport { convertToEST } from \"./helpers\";\n\nfunction Countdown(props) {\n  const [timeLeft, setTimeLeft] = useState(0);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    const fromTheStartOfDay = convertToEST(\n      Math.round((Date.now() / 1000) % 86400)\n    );\n    const { timeSlot, isWeekend, time } = props;\n\n    if (isWeekend) {\n      setTimeLeft(\"Imagine Having School on the Weekends\");\n      return;\n    }\n\n    if (timeSlot !== undefined) {\n      // primary focus check\n      if (timeSlot.primaryFocus !== undefined && timeSlot.primaryFocus === 1) {\n        setTimeLeft(time.toLocaleTimeString());\n        return;\n      }\n\n      const timeLeft = timeSlot.end - fromTheStartOfDay;\n      let displayString = \"\";\n      if (timeLeft / 3600 >= 1) {\n        displayString += `${Math.floor(timeLeft / 3600)}h`;\n      }\n      if (timeLeft / 60 >= 1) {\n        displayString += ` ${Math.floor(Math.floor(timeLeft % 3600) / 60)}m`;\n      }\n      displayString += ` ${timeLeft % 60}s`;\n      setTimeLeft(displayString.trim());\n    }\n  });\n  return <h1>{timeLeft}</h1>;\n}\n\nexport default Countdown;\n","import React, { useEffect, useState } from \"react\";\n\nconst Period = (props) => {\n  // Date.now()\n  const [display, setDisplay] = useState(\"loading\");\n  const [link, setLink] = useState(null);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    // This will run every frame update\n    // only after the use effect bellow this one finishes, nop\n    const { timeSlot, isWeekend } = props;\n\n    if (isWeekend) {\n      setDisplay(\"Imagine Having School on the Weekends\");\n      return;\n    }\n    let richContext = \"\";\n    if (timeSlot !== undefined) {\n      // logic\n      if (timeSlot.richContext !== undefined) {\n        const loadedRC = localStorage.getItem(\"VRA_\" + timeSlot.richContext);\n        if (loadedRC !== null) richContext = ` | ${loadedRC}`;\n      }\n      if (timeSlot.mRichContext) {\n        const loadedFrom = localStorage.getItem(\n          \"VRA_\" + timeSlot.mRichContext.from\n        );\n        const loadedTo = localStorage.getItem(\n          \"VRA_\" + timeSlot.mRichContext.to\n        );\n        if (loadedFrom !== null && loadedTo !== null) {\n          richContext = ` | ${loadedFrom} → ${loadedTo}`;\n        }\n        let loadedLink = null;\n        if (timeSlot.mRichContext !== undefined)\n          loadedLink = localStorage.getItem(\n            \"VRA_LINK_\" + timeSlot.mRichContext.to\n          );\n\n        if (timeSlot.richContext !== undefined)\n          loadedLink = localStorage.getItem(\"VRA_LINK_\" + timeSlot.richContext);\n\n        loadedLink !== null\n          ? setLink(loadedLink)\n          : console.log(\"Avoiding Settings Link\");\n      }\n      setDisplay(`${timeSlot.event}${richContext}`);\n    }\n  });\n\n  return (\n    <p\n      onClick={() => {\n        link !== null ? window.open(link) : console.log(\"nolink\");\n      }}\n    >\n      {display}\n    </p>\n  );\n};\n\nexport default Period;\n","export default __webpack_public_path__ + \"static/media/times.8ada58e8.svg\";","import React, { useState, useEffect } from \"react\";\nimport { validURL } from \"./helpers\";\nimport times from \"./svg/times.svg\";\n\nfunction dayToString(day) {\n  switch (day) {\n    case \"1\":\n      return \"Monday\";\n    case \"2\":\n      return \"Tuesday\";\n    case \"3\":\n      return \"Wednesday\";\n    case \"4\":\n      return \"Thrusday\";\n    case \"5\":\n      return \"Friday\";\n    case \"any\":\n      return \"Every Day\";\n    default:\n      return \"idk → \" + day;\n  }\n}\n\nfunction SettingsModal(props) {\n  const [editors, setEditors] = useState(null);\n  const [files, setFiles] = useState(null);\n\n  const handleLabelInput = (id, value) => {\n    localStorage.setItem(\"VRA_\" + id, value);\n  };\n\n  const handleLinkInput = (id, value) => {\n    localStorage.setItem(\"VRA_LINK_\" + id, value);\n  };\n\n  const verifyExistingLink = (id, value) => {\n    if (!validURL(value)) {\n      alert(\n        \"Your URL value is Invalid, please make sure it is valid before proceding\"\n      );\n      localStorage.removeItem(\"VRA_LINK_\" + id);\n    }\n  };\n\n  const handleExport = () => {\n    const localStorageExport = {};\n    Object.keys(localStorage).forEach((e) => {\n      if (e.match(/VRA_[0-9]+|VRA_LINK_[0-9]+/)) {\n        localStorageExport[e] = localStorage.getItem(e);\n      }\n    });\n    // elaborate process to download file\n    const element = document.createElement(\"a\");\n    const file = new Blob([JSON.stringify(localStorageExport)], {\n      type: \"application/json\",\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"VRA_Export.json\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  };\n\n  const handleImport = () => {\n    var reader = new FileReader();\n    reader.onload = (function (reader) {\n      return () => {\n        var contents = reader.result;\n        //var lines = contents.split(\"\\n\");\n        ////// data ready\n        const impored = JSON.parse(contents);\n        Object.keys(impored).forEach((element) => {\n          localStorage.setItem(element, impored[element]);\n        });\n        window.location.reload();\n      };\n    })(reader);\n\n    reader.readAsText(files);\n  };\n\n  useEffect(() => {\n    const { times } = props;\n    if (!!times || !typeof times === \"undefined\") {\n      // parsing\n      const out = {};\n\n      Object.keys(times).forEach((key) => {\n        out[key] = [];\n        times[key].forEach((key2) => {\n          if (key2.richContext !== undefined) {\n            // label\n            const label = localStorage.getItem(\"VRA_\" + key2.richContext);\n            let labelValue = \"\";\n            if (label !== null) labelValue = label;\n\n            // link\n            const link = localStorage.getItem(\"VRA_LINK_\" + key2.richContext);\n            let linkValue = \"\";\n            if (link !== null) linkValue = link;\n\n            out[key].push(\n              <React.Fragment key={key2.richContext}>\n                <p>\n                  {key2.event} | ID: {key2.richContext}\n                </p>\n                <div className=\"richContextContainer\">\n                  <p className=\"editorLabel\">Label: </p>\n                  <input\n                    className=\"richContextEditor\"\n                    type=\"text\"\n                    defaultValue={labelValue}\n                    onInput={(e) =>\n                      handleLabelInput(key2.richContext, e.target.value)\n                    }\n                  />\n                </div>\n                <div className=\"richContextContainer\">\n                  <p className=\"editorLabel\">Link: </p>\n                  <input\n                    className=\"richContextEditor\"\n                    type=\"text\"\n                    defaultValue={linkValue}\n                    onInput={(e) =>\n                      handleLinkInput(key2.richContext, e.target.value)\n                    }\n                    onBlur={(e) =>\n                      verifyExistingLink(key2.richContext, e.target.value)\n                    }\n                  />\n                </div>\n              </React.Fragment>\n            );\n          }\n        });\n      });\n\n      // displaying\n      let outFormated = [];\n      Object.keys(out).forEach((key) => {\n        const dti = dayToString(key.toString());\n        outFormated.push(<h2 key={dti}>{dti}</h2>);\n        //outFormated.concat(out[key]);\n        outFormated = [...outFormated, ...out[key]];\n      });\n      setEditors(outFormated);\n    }\n\n    // bind to escape key (same as pressing the x)\n    const handleKeyPress = (e) => {\n      if (e.key === \"Escape\") {\n        e.preventDefault();\n        props.handleCloseSettings();\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"modal\">\n      <img\n        src={times}\n        alt=\"Close!\"\n        className=\"modal-close\"\n        onClick={() => props.handleCloseSettings()}\n      />\n      <div className=\"richContextEditors\">\n        {editors}{\" \"}\n        <div className=\"footer\">\n          <button onClick={() => handleExport()}>Export!</button>\n          <input\n            type=\"file\"\n            accept=\".json, .txt\"\n            onChange={(event) => {\n              setFiles(event.target.files[0]);\n            }}\n            onClick={(event) => {\n              event.target.value = null;\n            }}\n          ></input>\n          <button onClick={() => handleImport()}>Submit</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SettingsModal;\n","export default __webpack_public_path__ + \"static/media/fa-cog.349ce3a7.svg\";","import React, { useState } from \"react\";\nimport SettingsModal from \"./SettingsModal\";\nimport facog from \"./svg/fa-cog.svg\";\n\nfunction SettingsIcon(props) {\n  const [showSettings, setShowSettings] = useState(false);\n\n  const handleOpenSettings = () => {\n    setShowSettings(true);\n    props.changeAppVisibility(false);\n  };\n\n  const handleCloseSettings = () => {\n    setShowSettings(false);\n    props.changeAppVisibility(true);\n  };\n\n  return (\n    <>\n      {showSettings === false ? (\n        <img\n          src={facog}\n          className=\"settings-icon\"\n          alt=\"Settings Icon\"\n          onClick={() => handleOpenSettings()}\n        ></img>\n      ) : null}\n      {showSettings ? (\n        <SettingsModal\n          handleCloseSettings={handleCloseSettings}\n          times={props.times}\n        />\n      ) : null}\n    </>\n  );\n}\n\nexport default SettingsIcon;\n//    <button className=\"ajfalsd\" style={{ backgroundImage: `url(${facog})` }} />\n","import React, { useState, useEffect } from \"react\";\nimport Countdown from \"./Countdown\";\nimport Period from \"./Period\";\nimport SettingsIcon from \"./SettingsIcon\";\nimport { convertToEST } from \"./helpers\";\n\nimport \"./App.css\";\n\nfunction AppContent() {\n  const [time, setTime] = useState(new Date());\n  const [displayAppContents, setDisplayAppContents] = useState(true);\n  const [currentSlot, setCurrentSlot] = useState(undefined);\n  const [timesTable, setTimesTable] = useState(null);\n  const [isWeekend, setIsWeekend] = useState(false);\n\n  const tick = () => {\n    setTime(new Date());\n\n    const fromTheStartOfDay = convertToEST(\n      Math.round((Date.now() / 1000) % 86400)\n    );\n\n    const dayToday = new Date().getDay().toString();\n\n    if (dayToday === \"6\" || dayToday === \"7\") {\n      setIsWeekend(true);\n      return;\n    } else {\n      if (isWeekend) setIsWeekend(false);\n    }\n\n    if (!!timesTable || !typeof timesTable === \"undefined\") {\n      // data ready\n      const dayMap = [...timesTable[\"any\"], ...timesTable[dayToday]]; // ES6 deconstruct 2 elements into an array\n      let update = false;\n\n      dayMap.forEach((period) => {\n        if (\n          period.start <= fromTheStartOfDay &&\n          period.end >= fromTheStartOfDay\n        ) {\n          setCurrentSlot(period);\n          update = true;\n        }\n      });\n\n      if (!update) {\n        console.log(\n          \"Error: No Section Found, Please report this to Vlad: \" +\n            btoa(JSON.stringify(timesTable))\n        );\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetch(\"https://api.jsonbin.io/b/5fca6e3365c249127ba338d0\")\n      .then((response) => response.json())\n      .then((data) => setTimesTable(data));\n  }, []);\n\n  useEffect(() => {\n    const timerID = setInterval(() => tick(), 1000);\n\n    return () => {\n      clearInterval(timerID);\n      // console.log(\"Unmount\"); // runs every seccond, idk why\n    };\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SettingsIcon\n          times={timesTable}\n          changeAppVisibility={setDisplayAppContents}\n        />\n        {displayAppContents && currentSlot?.primaryFocus !== 1 ? (\n          <p className=\"corner-clock\">\n            {time.toLocaleTimeString()} {time.toLocaleDateString()}\n          </p>\n        ) : null}\n        {currentSlot?.primaryFocus === 1 ? (\n          <p className=\"corner-clock\">{time.toLocaleDateString()}</p>\n        ) : null}\n      </header>\n      {displayAppContents ? (\n        <header className=\"App-body\">\n          <Countdown timeSlot={currentSlot} isWeekend={isWeekend} time={time} />\n          <Period timeSlot={currentSlot} isWeekend={isWeekend} />\n        </header>\n      ) : null}\n    </div>\n  );\n}\n\nexport default AppContent;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"Localhost Message: This web app is being served \" +\n              \"cache-first by a service worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppContent from \"./components/AppContent\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register({\n  onSuccess: () => console.log(\"good\"),\n  onUpdate: (registration) => {\n    if (registration && registration.waiting) {\n      registration.waiting.postMessage({ type: \"SKIP_WAITING\" });\n    }\n    window.location.reload();\n  },\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}